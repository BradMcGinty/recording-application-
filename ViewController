//
//  ViewController.swift
//  Recording Application
//
//  Created by Bradley McGinty on 26/03/2018.
//  Copyright Â© 2018 McGinBrad. All rights reserved.
//

import UIKit
import AVFoundation

class ViewController: UIViewController, AVAudioPlayerDelegate, AVAudioRecorderDelegate, UITableViewDelegate, UITableViewDataSource
{

    
    var recordingSession : AVAudioSession!
    var audioRecorder : AVAudioRecorder!
    var numberOfRecords : Int = 0
    var audioPlayer : AVAudioPlayer!
    var timeAtPause = 0.0
    
    
    @IBOutlet weak var buttonLabel: UIButton!
    @IBOutlet weak var recordingStore: UITableView!
    
    
    @IBAction func pauseButton(_ sender: Any)
    {
        if audioPlayer.isPlaying
        {
            audioPlayer.pause()
        }
        else
        {
            displayAlert(title: "Oops!", message: "Something went wrong!")
        }
    }
    
    
 
    
    @IBAction func stopButton(_ sender: Any)
    {
        if audioPlayer.isPlaying
        {
            audioPlayer.stop()
        }
        else
        {
            audioPlayer.currentTime = 0
        }
    }
    
    
    
    @IBAction func record(_ sender: Any)
    {
        //Check if we have an active recorder
        if audioRecorder == nil
        {
            numberOfRecords += 1
            let filename = getDirectory().appendingPathComponent("\(numberOfRecords).m4a")
            
            let settings = [AVFormatIDKey: Int(kAudioFormatAppleLossless), AVSampleRateKey: 44100, AVNumberOfChannelsKey: 2,
                                               AVEncoderAudioQualityKey: AVAudioQuality.high.rawValue]
            
            //Start Audio Recording
            do
            {
                audioRecorder = try AVAudioRecorder(url: filename, settings: settings)
                audioRecorder.delegate = self
                audioRecorder.record()
                
                
                
                buttonLabel.setTitle("Stop Recording", for: .normal)
            }
            catch
            {
                displayAlert(title: "Oops!", message: "Something went wrong!")
            }
        }
        else
        {
            // Stopping Audio Recording
            audioRecorder.stop()
            audioRecorder = nil
            
            UserDefaults.standard.setValue(numberOfRecords, forKey: "recordingIdentifier")
            recordingStore.reloadData()
            
            buttonLabel.setTitle("Start Recording", for: .normal)
        }
    }
    
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        
        
        //Setting up recording session
        recordingSession = AVAudioSession.sharedInstance()
        
        if let number:Int = UserDefaults.standard.object(forKey: "recordingIdentifier") as? Int
        {
            numberOfRecords = number
        }
        
        AVAudioSession.sharedInstance().requestRecordPermission
            {
            (hasPermission) in
            if hasPermission
                {
                    print ("Accepted")
                }
            }
        
        //
        let audioSession = AVAudioSession.sharedInstance()
        
        do
        {
            try audioSession.setCategory(AVAudioSessionCategoryPlayback)
        }
        catch
        {
        }
        
    }
    //Function that gets path to directory
    func getDirectory() -> URL
    {
        let paths = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask)
        let documentDirectory = paths[0]
        return documentDirectory
    }

    //Function that displays an alert
    func displayAlert(title:String, message:String)
    {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "dismiss", style: .default, handler: nil))
        present(alert, animated: true, completion: nil)
        
    }
    
    //Setting up recording store
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return numberOfRecords
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        cell.textLabel?.text = String(indexPath.row + 1)
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)
    {
        let path = getDirectory().appendingPathComponent("\(indexPath.row + 1).m4a")
        
        do
        {
            audioPlayer = try AVAudioPlayer(contentsOf: path)
            audioPlayer.play()
        }
        catch
        {
            
        }
    }
    
    
}
